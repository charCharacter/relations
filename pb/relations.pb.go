// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: relations.proto

package relations

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArticleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid   string `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	ArticleTitle string `protobuf:"bytes,2,opt,name=articleTitle,proto3" json:"articleTitle,omitempty"`
}

func (x *ArticleCreateRequest) Reset() {
	*x = ArticleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreateRequest) ProtoMessage() {}

func (x *ArticleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreateRequest.ProtoReflect.Descriptor instead.
func (*ArticleCreateRequest) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{0}
}

func (x *ArticleCreateRequest) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *ArticleCreateRequest) GetArticleTitle() string {
	if x != nil {
		return x.ArticleTitle
	}
	return ""
}

type ArticleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid   string `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	ArticleTitle string `protobuf:"bytes,2,opt,name=articleTitle,proto3" json:"articleTitle,omitempty"`
}

func (x *ArticleCreateResponse) Reset() {
	*x = ArticleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreateResponse) ProtoMessage() {}

func (x *ArticleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreateResponse.ProtoReflect.Descriptor instead.
func (*ArticleCreateResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleCreateResponse) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *ArticleCreateResponse) GetArticleTitle() string {
	if x != nil {
		return x.ArticleTitle
	}
	return ""
}

type ArticleFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid string `protobuf:"bytes,2,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
}

func (x *ArticleFindRequest) Reset() {
	*x = ArticleFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleFindRequest) ProtoMessage() {}

func (x *ArticleFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleFindRequest.ProtoReflect.Descriptor instead.
func (*ArticleFindRequest) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{2}
}

func (x *ArticleFindRequest) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

type ArticleFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid   string   `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	ArticleTitle string   `protobuf:"bytes,2,opt,name=articleTitle,proto3" json:"articleTitle,omitempty"`
	Keywords     []string `protobuf:"bytes,3,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *ArticleFindResponse) Reset() {
	*x = ArticleFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleFindResponse) ProtoMessage() {}

func (x *ArticleFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleFindResponse.ProtoReflect.Descriptor instead.
func (*ArticleFindResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{3}
}

func (x *ArticleFindResponse) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *ArticleFindResponse) GetArticleTitle() string {
	if x != nil {
		return x.ArticleTitle
	}
	return ""
}

func (x *ArticleFindResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type ArticleFindAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ArticleFindResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleFindAllResponse) Reset() {
	*x = ArticleFindAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleFindAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleFindAllResponse) ProtoMessage() {}

func (x *ArticleFindAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleFindAllResponse.ProtoReflect.Descriptor instead.
func (*ArticleFindAllResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{4}
}

func (x *ArticleFindAllResponse) GetData() []*ArticleFindResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type RelationsCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid          string   `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	RelatedArticlesUids []string `protobuf:"bytes,2,rep,name=relatedArticlesUids,proto3" json:"relatedArticlesUids,omitempty"`
}

func (x *RelationsCreateRequest) Reset() {
	*x = RelationsCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsCreateRequest) ProtoMessage() {}

func (x *RelationsCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsCreateRequest.ProtoReflect.Descriptor instead.
func (*RelationsCreateRequest) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{5}
}

func (x *RelationsCreateRequest) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *RelationsCreateRequest) GetRelatedArticlesUids() []string {
	if x != nil {
		return x.RelatedArticlesUids
	}
	return nil
}

type RelationsCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RelationsCreateResponse) Reset() {
	*x = RelationsCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsCreateResponse) ProtoMessage() {}

func (x *RelationsCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsCreateResponse.ProtoReflect.Descriptor instead.
func (*RelationsCreateResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{6}
}

func (x *RelationsCreateResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RelationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid  string  `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	Coefficient float32 `protobuf:"fixed32,2,opt,name=coefficient,proto3" json:"coefficient,omitempty"`
}

func (x *RelationData) Reset() {
	*x = RelationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationData) ProtoMessage() {}

func (x *RelationData) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationData.ProtoReflect.Descriptor instead.
func (*RelationData) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{7}
}

func (x *RelationData) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *RelationData) GetCoefficient() float32 {
	if x != nil {
		return x.Coefficient
	}
	return 0
}

type RelationsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid      string          `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	RelatedArticles []*RelationData `protobuf:"bytes,2,rep,name=relatedArticles,proto3" json:"relatedArticles,omitempty"`
}

func (x *RelationsData) Reset() {
	*x = RelationsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsData) ProtoMessage() {}

func (x *RelationsData) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsData.ProtoReflect.Descriptor instead.
func (*RelationsData) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{8}
}

func (x *RelationsData) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *RelationsData) GetRelatedArticles() []*RelationData {
	if x != nil {
		return x.RelatedArticles
	}
	return nil
}

type RelationsFindOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid string `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
}

func (x *RelationsFindOneRequest) Reset() {
	*x = RelationsFindOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsFindOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsFindOneRequest) ProtoMessage() {}

func (x *RelationsFindOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsFindOneRequest.ProtoReflect.Descriptor instead.
func (*RelationsFindOneRequest) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{9}
}

func (x *RelationsFindOneRequest) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

type RelationsFindOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedArticlesUids []string `protobuf:"bytes,1,rep,name=relatedArticlesUids,proto3" json:"relatedArticlesUids,omitempty"`
}

func (x *RelationsFindOneResponse) Reset() {
	*x = RelationsFindOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsFindOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsFindOneResponse) ProtoMessage() {}

func (x *RelationsFindOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsFindOneResponse.ProtoReflect.Descriptor instead.
func (*RelationsFindOneResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{10}
}

func (x *RelationsFindOneResponse) GetRelatedArticlesUids() []string {
	if x != nil {
		return x.RelatedArticlesUids
	}
	return nil
}

type RelationsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationsData []*RelationsData `protobuf:"bytes,2,rep,name=relationsData,proto3" json:"relationsData,omitempty"`
}

func (x *RelationsListResponse) Reset() {
	*x = RelationsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsListResponse) ProtoMessage() {}

func (x *RelationsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsListResponse.ProtoReflect.Descriptor instead.
func (*RelationsListResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{11}
}

func (x *RelationsListResponse) GetRelationsData() []*RelationsData {
	if x != nil {
		return x.RelationsData
	}
	return nil
}

type RelationsCreateKeywordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid string   `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
	Keywords   []string `protobuf:"bytes,2,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *RelationsCreateKeywordsRequest) Reset() {
	*x = RelationsCreateKeywordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsCreateKeywordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsCreateKeywordsRequest) ProtoMessage() {}

func (x *RelationsCreateKeywordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsCreateKeywordsRequest.ProtoReflect.Descriptor instead.
func (*RelationsCreateKeywordsRequest) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{12}
}

func (x *RelationsCreateKeywordsRequest) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

func (x *RelationsCreateKeywordsRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type RelationsCreateKeywordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUid string `protobuf:"bytes,1,opt,name=articleUid,proto3" json:"articleUid,omitempty"`
}

func (x *RelationsCreateKeywordsResponse) Reset() {
	*x = RelationsCreateKeywordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relations_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsCreateKeywordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsCreateKeywordsResponse) ProtoMessage() {}

func (x *RelationsCreateKeywordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relations_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsCreateKeywordsResponse.ProtoReflect.Descriptor instead.
func (*RelationsCreateKeywordsResponse) Descriptor() ([]byte, []int) {
	return file_relations_proto_rawDescGZIP(), []int{13}
}

func (x *RelationsCreateKeywordsResponse) GetArticleUid() string {
	if x != nil {
		return x.ArticleUid
	}
	return ""
}

var File_relations_proto protoreflect.FileDescriptor

var file_relations_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x3e, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x22,
	0x75, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x55, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x55, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x65, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x6f,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x0d, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x43, 0x0a,
	0x17, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55,
	0x69, 0x64, 0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x55, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x55, 0x69, 0x64, 0x73,
	0x22, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x1e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x1f, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x32, 0xda, 0x04, 0x0a, 0x10, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x90, 0x01,
	0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x72, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46,
	0x69, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f,
	0x7b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x7d, 0x12, 0x68, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x3b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relations_proto_rawDescOnce sync.Once
	file_relations_proto_rawDescData = file_relations_proto_rawDesc
)

func file_relations_proto_rawDescGZIP() []byte {
	file_relations_proto_rawDescOnce.Do(func() {
		file_relations_proto_rawDescData = protoimpl.X.CompressGZIP(file_relations_proto_rawDescData)
	})
	return file_relations_proto_rawDescData
}

var file_relations_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_relations_proto_goTypes = []interface{}{
	(*ArticleCreateRequest)(nil),            // 0: relations.ArticleCreateRequest
	(*ArticleCreateResponse)(nil),           // 1: relations.ArticleCreateResponse
	(*ArticleFindRequest)(nil),              // 2: relations.ArticleFindRequest
	(*ArticleFindResponse)(nil),             // 3: relations.ArticleFindResponse
	(*ArticleFindAllResponse)(nil),          // 4: relations.ArticleFindAllResponse
	(*RelationsCreateRequest)(nil),          // 5: relations.RelationsCreateRequest
	(*RelationsCreateResponse)(nil),         // 6: relations.RelationsCreateResponse
	(*RelationData)(nil),                    // 7: relations.RelationData
	(*RelationsData)(nil),                   // 8: relations.RelationsData
	(*RelationsFindOneRequest)(nil),         // 9: relations.RelationsFindOneRequest
	(*RelationsFindOneResponse)(nil),        // 10: relations.RelationsFindOneResponse
	(*RelationsListResponse)(nil),           // 11: relations.RelationsListResponse
	(*RelationsCreateKeywordsRequest)(nil),  // 12: relations.RelationsCreateKeywordsRequest
	(*RelationsCreateKeywordsResponse)(nil), // 13: relations.RelationsCreateKeywordsResponse
	(*emptypb.Empty)(nil),                   // 14: google.protobuf.Empty
}
var file_relations_proto_depIdxs = []int32{
	3,  // 0: relations.ArticleFindAllResponse.data:type_name -> relations.ArticleFindResponse
	7,  // 1: relations.RelationsData.relatedArticles:type_name -> relations.RelationData
	8,  // 2: relations.RelationsListResponse.relationsData:type_name -> relations.RelationsData
	12, // 3: relations.RelationsService.RelationsCreateKeywords:input_type -> relations.RelationsCreateKeywordsRequest
	0,  // 4: relations.RelationsService.ArticleCreate:input_type -> relations.ArticleCreateRequest
	2,  // 5: relations.RelationsService.ArticleFind:input_type -> relations.ArticleFindRequest
	14, // 6: relations.RelationsService.ArticleFindAll:input_type -> google.protobuf.Empty
	14, // 7: relations.RelationsService.RelationsList:input_type -> google.protobuf.Empty
	13, // 8: relations.RelationsService.RelationsCreateKeywords:output_type -> relations.RelationsCreateKeywordsResponse
	1,  // 9: relations.RelationsService.ArticleCreate:output_type -> relations.ArticleCreateResponse
	3,  // 10: relations.RelationsService.ArticleFind:output_type -> relations.ArticleFindResponse
	4,  // 11: relations.RelationsService.ArticleFindAll:output_type -> relations.ArticleFindAllResponse
	11, // 12: relations.RelationsService.RelationsList:output_type -> relations.RelationsListResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_relations_proto_init() }
func file_relations_proto_init() {
	if File_relations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_relations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleFindAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsFindOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsFindOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsCreateKeywordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relations_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsCreateKeywordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relations_proto_goTypes,
		DependencyIndexes: file_relations_proto_depIdxs,
		MessageInfos:      file_relations_proto_msgTypes,
	}.Build()
	File_relations_proto = out.File
	file_relations_proto_rawDesc = nil
	file_relations_proto_goTypes = nil
	file_relations_proto_depIdxs = nil
}
